{"name":"Dictyostelium Conference Website","body":"## Ruby on rails web application for dictybase conference \r\n\r\nThis wiki will help you deploy the dictyConference Ruby on Rails application.\r\n\r\nThis [link](http://www.tutorialspoint.com/ruby-on-rails/rails-directory-structure.htm) will help you understand the directory structure of a rails application\r\n\r\n# Cloning the repository\r\nTo begin with clone the repository from [Github/dictyconference](https://github.com/dictyBase/dictyconference/tree/feature/trial).\r\n \r\n```shell\r\ngit clone git://github.com/dictyBase/dictyconference.git\r\n```\r\nThen switch to the ```develop``` branch\r\n\r\n```shell\r\ncd dictyconference\r\ngit checkout develop\r\n```\r\n\r\n# Setting up RVM\r\nWe will have the set up [RVM](https://rvm.beginrescueend.com/) so that you can use your version of gems. Just fire up your terminal and follow the steps to install ```ruby```.\r\nThen install the version of Ruby you want to use for your application;\r\n\r\n```shell\r\nrvm install ree\r\n```\r\n\r\nTo use this version of Ruby for you application, do\r\n\r\n```shell\r\nrvm use ree\r\n```\r\n\r\nNow create a gemset called 'dictyConf' for our application\r\n\r\n```shell\r\nrvm gemset create dictyConf\r\nrvm use @dictyConf\r\n```\r\n\r\nInstall [```rails```](http://rubyonrails.org/)\r\n\r\n```shell\r\ngem install rails\r\n```\r\n\r\nNext step is to install [```bundler```](http://gembundler.com/). It is a very handy gem. It will install all the gems from your ```Gemfile``` and set it up for application.\r\n\r\n```shell\r\ngem install bundler\r\n```\r\n\r\n# Setting up 'bcdatabase'\r\n[NUBIC](http://www.nucats.northwestern.edu/clinical-research-resources/data-collection-biomedical-informatics-and-nubic/bioinformatics-overview.html) has a library and utility called [```bcdatabase```](https://github.com/NUBIC/bcdatabase) which provides database configuration parameter management for Ruby on Rails applications. It provides a simple mechanism for separating database configuration attributes from application source code so that there's no temptation to check passwords into the version control system.\r\n\r\nBefore we can use this gem we have to modify the ```Gemfile``` to add the following source and gem\r\n\r\n```ruby\r\nsource 'http://download.bioinformatics.northwestern.edu/gems/'\r\n\r\ngem 'bcdatabase', '1.2.1'\r\n```\r\n\r\nIt is pretty easy to use this gem (now that we have figured it out). When you create a rails application using ```rails new <app_name>```, a database configuration file is created in ```./config/database.yml``` which looks like (default)\r\n\r\n```yaml\r\ndevelopment:\r\n  adapter: sqlite3\r\n  database: db/development.sqlite3\r\n  pool: 5\r\n  timeout: 5000\r\n\r\ntest:\r\n  adapter: sqlite3\r\n  database: db/test.sqlite3\r\n  pool: 5\r\n  timeout: 5000\r\n\r\nproduction:\r\n  adapter: sqlite3\r\n  database: db/production.sqlite3\r\n  pool: 5\r\n  timeout: 5000\r\n```\r\n\r\nIf you want to use ```bcdatabase``` for the staging your application, your ```./config/database.yml``` file will look like this\r\n\r\n```yaml\r\n<%\r\n  require 'bcdatabase'\r\n  bcdb = Bcdatabase.load\r\n%>\r\n\r\ndevelopment:\r\n  adapter: sqlite3\r\n  database: db/development.sqlite3\r\n  pool: 5\r\n  timeout: 5000\r\n\r\ntest:\r\n  adapter: sqlite3\r\n  database: db/test.sqlite3\r\n  pool: 5\r\n  timeout: 5000\r\n\r\nproduction:\r\n  adapter: sqlite3\r\n  database: db/production.sqlite3\r\n  pool: 5\r\n  timeout: 5000\r\n\r\n<%= bcdb.staging :pstage, 'dictyConf' %>\r\n```\r\n\r\nThe ```pstage``` parameter points to a configuration block ```dictyConf``` in a YAML file ```/etc/nubic/db/pstage.yml``` (on your staging server). This configuration block which will have the actual database configuration looks like\r\n\r\n```yaml\r\ndictyConf:\r\n  database: <db_name>\r\n  username: <db_user>\r\n  epassword: <encrypted_password>\r\n```\r\n\r\nAlso for the ```bcdb.staging``` (from ERB block) to work, you will have to create a ```staging.rb``` file in ```./config/environments/```\r\n\r\n```shell\r\ncp development.rb staging.rb\r\n```\r\n\r\n# Final steps\r\nInstall all the dependencies using ```bundler```\r\n\r\n```bash\r\nbundle install\r\n```\r\n\r\nAnd before you deploy you will have to migrate your database under the staging environment.\r\n\r\n```rails\r\nRAILS_ENV=staging rake db:migrate\r\n```\r\n\r\nAsk your system administrator to setup your application with Apache server and you are good to go.\r\n\r\n# Testing\r\nYou can use [```rspec```](http://rspec.info/) or [```factory_girl```](https://github.com/thoughtbot/factory_girl) for ```fixtures```.\r\n","tagline":"Ruby on Rails web application for dictyBase conference website","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}